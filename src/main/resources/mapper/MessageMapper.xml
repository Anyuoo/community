<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anyu.community.mapper.MessageMapper">

    <sql id="SELECT_LIST">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <sql id="INSERT_LIST">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="INSERT_LIST"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>
    <select id="listConversations" resultType="Message">
        select
        <include refid="SELECT_LIST"></include>
        from message
        where id in (
        select max(id) from message
        where (to_id=#{userId} or from_id=#{userId})
        and status != 2 and from_id != 1
        group by conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="countConversations" resultType="int">
        select count(m.max_id) from (
        select max(id) as max_id  from message
        where (to_id=#{userId} or from_id=#{userId})
        and status != 2 and from_id != 1
        group by conversation_id
        ) as m
    </select>

    <select id="listLetters" resultType="Message">
        select
        <include refid="SELECT_LIST"></include>
        from message
        where status != 2 and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset},#{limit}
    </select>

    <select id="countLetters" resultType="int">
        select count(*)
        from message
        where status != 2 and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="countUnreadLetters" resultType="int">
        select count(*)
        from message
        where status = 0 and from_id != 1
        and to_id = #{userId}
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>

    </select>

    <update id="updateStatus">
        update message set status= #{status}
        where id in
        <foreach collection="ids" open="(" item="id" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>